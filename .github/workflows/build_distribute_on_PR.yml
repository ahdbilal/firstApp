name: Android CI

on: 
  pull_request:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v1.2.0
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: build with gradle
      run: ./gradlew build
    
    - name: Sign android release
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: build
        path: app/build/outputs/apk
    
    - uses: technote-space/get-git-comment-action@v1
    
    - name: helper function
      run: |
            zip -r build.zip app/build/outputs/apk/release
            echo "${{ env.COMMIT_MESSAGE }}" > release_notes.txt
    
    - name: Distribute release
      uses: ahdbilal/AppCenter-Github-Action@v1.0.3
      with:
        command: appcenter distribute release -f app/build/outputs/apk/release/app-release-unsigned-signed.apk -a ahbilal-microsoft.com/firstApp -g privateA -R release_notes.txt
        token: ${{secrets.APP_CENTER_TOKEN}}
    
    - name: Get release link
      id: release
      run: |
        temp=$(curl -X GET "https://api.appcenter.ms/v0.1/apps/ahbilal-microsoft.com/firstApp/distribution_groups/privateA/releases/latest" -H "accept: application/json" -H "X-API-Token: 48795f81b653dcbad31bbb403f21b49d538badb3")
        id=$(echo $temp | python3 -c "import sys, json; print(json.load(sys.stdin)['id'])")
        app_name=$(echo $temp | python3 -c "import sys, json; print(json.load(sys.stdin)['app_name'])")
        version=$(echo $temp | python3 -c "import sys, json; print(json.load(sys.stdin)['short_version'])")
        echo "::set-output name=id::$id"
        echo "::set-output name=app_name::$app_name"
        echo "::set-output name=version::$version"
        echo "::set-output name=link::https://install.appcenter.ms/users/ahbilal-microsoft.com/apps/firstApp/releases/$id"
        pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        echo "::set-output name=pull_number::$pull_number"
    
    - name: Create a release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ steps.release.outputs.id }}
          release_name: ${{ steps.release.outputs.app_name }} v${{ steps.release.outputs.version }}
          body: ${{ env.COMMIT_MESSAGE }}
          #draft: # optional
          #prerelease: # optional
    
    - name: Upload release asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build.zip
        asset_name: build.zip
        asset_content_type: application/zip
    
    - name: Create comment
      uses: peter-evans/create-or-update-comment@v1
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.release.outputs.pull_number }} ${{ secrets.GITHUB_TOKEN }}
          body: |
            Scan the code with your device camera, or visit this [install page][1] on your device browser:
            
            ![alt text](https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${{ steps.release.outputs.link }})
            
            [1]: ${{ env.link }}
    
