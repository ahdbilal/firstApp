name: ChatOps
on: [issue_comment]

jobs:
  label-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Listen for PR Comments
        uses: machine-learning-apps/actions-chatops@master
        with:
          TRIGGER_PHRASE: "/distribute"
        env: # you must supply GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: prcomm
      
      - name: Checking Out
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true'
        uses: actions/checkout@v2
      
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          
      - name: App Center
        id: cli
        run: |
          npm install appcenter-cli@2.3.3
          npx appcenter distribute  ${{ steps.prcomm.outputs.TRAILING_LINE }} --token "${{secrets.APP_CENTER_TOKEN}}" -a ${{ secrets.APP_NAME }} >> comment.txt
          tr -s ' ' ' ' <comment.txt> comment1.txt
          tr -s '\n' '\t\t' <comment.txt> comment1.txt
          comment=$(cat comment1.txt)
          echo $comment
          echo "::set-output name=comment::$comment"
        
      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ github.event.comment.id }}
          body: |
            <br />
            App Center:
            ${{ steps.cli.outputs.comment }}
